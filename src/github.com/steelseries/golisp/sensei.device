;;; (def-struct <name> <field>...)
;;; (def-field <name> <type> [<count>] [<to json translation> <from json translation>])
;;; (def-api <struct name> (read ) (write ))

(def-struct led
     (def-field red uint8)
     (def-field green uint8)
     (def-field blue uint8)
     (def-field mode uint8))

(def-struct lcd
     (def-field contrast uint8)
     (def-field brightness uint8))

(def-struct cpi
     (def-field unbind uint8)
     (def-field x uint16)
     (def-field y uint16)
     (def-field led led))

(def-struct lift
     (def-field mode uint8)
     (def-field detection-threshold uint8))

(def-struct angle-snap
     (def-field mode uint8)
     (def-field degree uint16)
     (def-field velocity-threshold uint8)
     (def-field control uint16))

(def-struct acceleration
     (def-field mode uint8)
     (def-field degree uint8)) 

(def-struct deceleration
     (def-field mode uint8)
     (def-field degree uint8)) 

(def-struct sensor
     (def-field default-cpi uint8)
     (def-field cpi cpi 2)
     (def-field lift-detection lift)
     (def-field angle-snap angle-snap)
     (def-field acceleration acceleration)
     (def-field deceleration deceleration))

(def-struct bitmap
     (def-field display uint8)
     (def-field pixels uint8 512))


(def-struct button
     (def-field function uint8)
     (def-field mapping uint8)
     (def-field macro-address uint16)
     (def-field number-of-events uint16)
     (def-field debounce-count uint8))

(def-struct wheel
     (def-field function uint8)
     (def-field mapping uint8)
     (def-field macro-address uint16 )
     (def-field number-of-events uint16) 
     (def-field dummy uint8))

(def-struct macro-event
     (def-field type uint8)
     (def-field action uint16)
     (def-field make-or-break uint8)
     (def-field delay uint32))

(def-struct macro
     (def-field number-of-events uint16)
     (def-field address uint16)
     (def-field loop-count uint8)
     (def-field events macro-event 128
                         (lambda (events macro)
                              (take (get 'number-of-events macro) events))
                         (lambda (events macro)
                              (append events 
                                           (times (new macro-event) 
                                                     (- 128 (get 'number-of-events macro)))))))
(def-struct profile
     (def-field id uint8)
     (def-field name uint8 16
              (lambda (bytes)
                    (bytes-to-string bytes))
              (lambda (str)
                    (stringto-bytes s 16)))
     (def-field size uint16)
     (def-field checksum uint16)
     (def-field polling-rate uint8)
     (def-field orientation uint8)
     (def-field sensor sensor)
     (def-field buttons button 8)
     (def-field wheels wheel 2)
     (def-field wheel-led led)
     (def-field lcd lcd)
     (def-field logo-bitmap bitmap)
     (def-field macros macro 10))

//(def-api profile
//         (read )
//         (write ))